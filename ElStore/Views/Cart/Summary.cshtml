@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Models.ViewModel.ProductUserVM

<link rel="stylesheet" href="~/css/Test.css" />
<form asp-action="Summary" method="post">
    <div class="container">
        <div class="row">
            <div class="col-xl-8">
                <div class="card">
                    <div class="card-body">
                        <ol class="activity-checkout mb-0 px-4 mt-3">
                            <li class="checkout-item">
                                <div class="avatar checkout-icon p-1">
                                    <div class="avatar-title rounded-circle bg-primary">
                                        <i class="bx bxs-receipt text-white font-size-20"></i>
                                    </div>
                                </div>
                                <div class="feed-item-list">
                                    <div>
                                        <h5 class="font-size-16 mb-1">Billing Info</h5>
                                        <div class="mb-3">
                                            <div>
                                                <div class="row">
                                                    <div class="col-lg-4">
                                                        <div class="mb-3">
                                                            <label class="form-label" for="billing-name">Full name</label>
                                                            <input asp-for="FullName" type="text" class="form-control" id="billing-name" placeholder="@Model.User.Login">
                                                            <span asp-validation-for="FullName" class="text-danger"></span>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-4">
                                                        <div class="mb-3">
                                                            <label class="form-label" for="billing-email-address">Email Address</label>
                                                            <input asp-for="User.Email" type="email" class="form-control" id="billing-email-address" placeholder="Enter email">
                                                            <span asp-validation-for="User.Email" class="text-danger"></span>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-4">
                                                        <div class="mb-3">
                                                            <label class="form-label" for="billing-phone">Phone</label>
                                                            <input asp-for="@Model.PhoneNumber" type="text" class="form-control" id="billing-phone" placeholder="@Model.User.PhoneNumber">
                                                            <span asp-validation-for="@Model.PhoneNumber" class="text-danger"></span>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row" id="shippingDetails" style="display: none;">
                                                    <div class="col-lg-4">
                                                        <div class="mb-4 mb-lg-0">
                                                            <label class="form-label" for="billing-city">City</label>
                                                            <input type="text" asp-for="City" id="cityInput" class="form-control" placeholder="Write city" />
                                                            <ul id="cityList" class="list-group mt-2" style="max-height: 150px; overflow-y: auto;"></ul>
                                                        </div>
                                                    </div>

                                                    <div class="col-lg-4">
                                                        <div class="mb-0">
                                                            <label class="form-label" for="zip-code">Number Office</label>
                                                            <span asp-validation-for="NumberOffice" class="text-danger"></span>
                                                            <input type="text" asp-for="NumberOffice" id="warehouseInput" class="form-control" placeholder="Choose post office" disabled />
                                                            <ul id="warehouseList" class="list-group mt-2" style="max-height: 150px; overflow-y: auto;"></ul>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </li>
                            <li class="checkout-item">
                                <div class="avatar checkout-icon p-1">
                                    <div class="avatar-title rounded-circle bg-primary">
                                        <i class="bx bxs-truck text-white font-size-20"></i>
                                    </div>
                                </div>
                                <div class="feed-item-list">
                                    <div>
                                        <div class="mb-3">
                                            <label class="form-label" for="shipping-method">Shipping Method</label>
                                            <select class="form-control" id="shipping-method" name="ShippingMethod" onchange="showFields(this)" required="">
                                                <option value="none">Choose delivery method</option>
                                                <option value="pickup">Self-delivery</option>
                                                <option value="nova-post">Nova Post</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </li>
                            <li class="checkout-item">
                                <div class="avatar checkout-icon p-1">
                                    <div class="avatar-title rounded-circle bg-primary">
                                        <i class="bx bxs-wallet-alt text-white font-size-20"></i>
                                    </div>
                                </div>
                                <div class="feed-item-list">
                                    <div>
                                        <h5 class="font-size-14 mb-3">Payment method :</h5>
                                        <div class="row">
                                            <div class="col-lg-3 col-sm-6" id="card" style="display: none;">
                                                <div data-bs-toggle="collapse">
                                                    <label class="card-radio-label">
                                                        <input type="radio" name="PaymentMethod" id="pay-methodoption1" class="card-radio-input" value="card" onclick="displayGooglePayButton(this)">
                                                        <span class="card-radio py-3 text-center text-truncate">
                                                            <i class="bx bx-credit-card d-block h2 mb-3 fa fa-cc-visa"></i>
                                                            Credit / Debit Card
                                                        </span>
                                                    </label>
                                                    <div id="googlePayButton" style="display:none;"></div>
                                                </div>
                                            </div>

                                            <div class="col-lg-3 col-sm-6" id="payInStore" style="display: none;">
                                                <div>
                                                    <label class="card-radio-label">
                                                        <input type="radio" name="PaymentMethod" id="pay-methodoption2" class="card-radio-input" value="payInStore">
                                                        <span class="card-radio py-3 text-center text-truncate">
                                                            <i class="bx bxl-paypal d-block h2 mb-3 fa fa-paypal"></i>
                                                            Pay in Store
                                                        </span>
                                                    </label>
                                                </div>
                                            </div>

                                            <div class="col-lg-3 col-sm-6" id="cashOnDelivery" style="display: none;">
                                                <div>
                                                    <label class="card-radio-label">
                                                        <input type="radio" name="PaymentMethod" id="pay-methodoption3" class="card-radio-input" value="cashOnDelivery">
                                                        <span class="card-radio py-3 text-center text-truncate">
                                                            <i class="bx bx-money d-block h2 mb-3 fa fa-money"></i>
                                                            <span>Cash on Delivery</span>
                                                        </span>
                                                    </label>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </li>
                        </ol>
                    </div>
                </div>

                <div class="row my-4">
                    <div class="col">
                        <a asp-action="Index" asp-controller="Cart" class="btn btn-link text-muted">
                            <i class="mdi mdi-arrow-left me-1"></i> Continue Shopping </a>
                    </div>
                    <div class="col">
                        <div class="text-end mt-2 mt-sm-0">
                            <button type="submit" class="btn btn-success">
                                <i class="mdi mdi-cart-outline me-1">Proceed</i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-4">
                <div class="card checkout-order-summary">
                    <div class="card-body">
                        <div class="p-3 bg-light mb-3">
                            <h5 class="font-size-16 mb-0">Order Summary</h5>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-centered mb-0 table-nowrap">
                                <thead>
                                    <tr>
                                        <th class="border-top-0" style="width: 110px;" scope="col">Product</th>
                                        <th class="border-top-0" scope="col">Product Desc</th>
                                        <th class="border-top-0" scope="col">Price</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var product in Model.ProductList)
                                    {
                                        <tr>
                                            <th scope="row">
                                                <img src="~/@product.Product.Images.Image.First()" alt="product-img" title="product-img" class="avatar-lg rounded">
                                            </th>
                                            <td>
                                                <h5 class="font-size-16 text-truncate">
                                                    <a href="#" class="text-dark">@product.Product.Brand @product.Product.Model</a>
                                                </h5>

                                                <p class="text-muted mb-0 mt-1">$ @product.Product.Price x @product.Count</p>
                                            </td>
                                        </tr>
                                    }
                                    <tr>
                                        <td colspan="2">
                                            <h5 class="font-size-14 m-0">Sub Total :</h5>
                                        </td>
                                        <td>
                                            @for (int i = 0; i < Model.ProductList.Count(); i++)
                                            {
                                                <input type="hidden" asp-for="ProductList[i].Product"/>
                                                <input type="hidden" asp-for="ProductList[i].Count"/>
                                                <input type="hidden" asp-for="ProductList[i].Product.Id"/>
                                                <input type="hidden" asp-for="ProductList[i].Product.Price"/>
                                                <input type="hidden" asp-for="ProductList[i].Product.Brand"/>
                                                <input type="hidden" asp-for="ProductList[i].Product.Model"/>
                                                <small class="text-muted">@(Model.ProductList[i].Product.Price * Model.ProductList[i].Count)</small>
                                            }
                                        </td>
                                    </tr>
                                    <tr class="bg-light">
                                        <td colspan="2">
                                            <h5 class="font-size-14 m-0">Total :</h5>
                                        </td>
                                        <td>
                                            <input type="hidden" asp-for="Total"/>
                                            <div class="fw-medium">@Model.Total</div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" name="PaymentMethod" id="PaymentMethodHidden" />
    <input type="hidden" name="ShippingMethod" id="ShippingMethodHidden" />
</form>

@section Scripts{
    <script src="~/js/novaposhta.js"></script>
    <script src="https://pay.google.com/gp/p/js/pay.js" async></script>
    <script>
        document.querySelector('form').addEventListener('submit', function(event) {
            var selectedPaymentMethod = document.querySelector('input[name="PaymentMethod"]:checked');
            var selectedShippingMethod = document.getElementById('shipping-method').value;

            var isValidPayment = true;
  
            if (!selectedPaymentMethod) {
                Swal.fire({
                    title: 'Error!',
                    text: 'Please choose a shipping method and payment method',
                    icon: 'error',
                });
                isValidPayment = false;
            }

            if (!isValidPayment) {
                event.preventDefault();
            } else {
                document.getElementById('PaymentMethodHidden').value = selectedPaymentMethod.value;
                document.getElementById('ShippingMethodHidden').value = selectedShippingMethod;
            }
        });
        let googlePayButtonCreated = false;
        function showFields(element) {
            var shippingDetails = document.getElementById('shippingDetails');
            var card = document.getElementById('card');
            var payInStore = document.getElementById('payInStore');
            var cashOnDelivery = document.getElementById('cashOnDelivery');
            var googlePayButton = document.getElementById('googlePayButton');

            if (element.value === 'nova-post') {
                shippingDetails.style.display = 'block';
                card.style.display = 'block';
                payInStore.style.display = 'none';
                cashOnDelivery.style.display = 'block';
            } else if (element.value === 'pickup') {
                shippingDetails.style.display = 'none';
                card.style.display = 'block';
                payInStore.style.display = 'block';
                cashOnDelivery.style.display = 'none';
            } else {
                shippingDetails.style.display = 'none';
                card.style.display = 'none';
                payInStore.style.display = 'none';
                cashOnDelivery.style.display = 'none';
            }
            
            if (googlePayButton) {
                googlePayButton.style.display = "none";
                googlePayButton.innerHTML = ''; 
                googlePayButtonCreated = false;
            }
        }
        
        function displayGooglePayButton(radio) {
                    var googlePayButton = document.getElementById('googlePayButton');
        
                    if (radio.checked && radio.value === 'card') {
                        if (!googlePayButtonCreated) {
                            googlePayButton.style.display = 'block';
        
                            // Google Pay configuration
                            const googlePayClient = new google.payments.api.PaymentsClient({ environment: 'TEST' });
        
                            const button = googlePayClient.createButton({
                                onClick: onGooglePayButtonClicked
                            });
        
                            googlePayButton.appendChild(button);
                            googlePayButtonCreated = true;
                        }
                    }
                }
        
                function onGooglePayButtonClicked() {
                    const googlePayClient = new google.payments.api.PaymentsClient({ environment: 'TEST' });
        
                    const paymentDataRequest = {
                        apiVersion: 2,
                        apiVersionMinor: 0,
                        allowedPaymentMethods: [
                            {
                                type: 'CARD',
                                parameters: {
                                    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],
                                    allowedCardNetworks: ['MASTERCARD', 'VISA']
                                },
                                tokenizationSpecification: {
                                    type: 'PAYMENT_GATEWAY',
                                    parameters: {
                                        gateway: 'example',
                                        gatewayMerchantId: 'exampleGatewayMerchantId'
                                    }
                                }
                            }
                        ],
                        transactionInfo: {
                            totalPriceStatus: 'FINAL',
                            totalPrice: '1.00',
                            currencyCode: 'USD'
                        },
                        merchantInfo: {
                            merchantId: 'BCR2DN4TWXD6FMQB',
                            merchantName: 'ElStore'
                        }
                    };
        
                    googlePayClient.loadPaymentData(paymentDataRequest).then(function(paymentData) {
                            // Handle payment data and process the transaction
                            console.log(paymentData);
                    
                            // Send payment data to server
                            fetch('Cart/Summary', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(paymentData)
                            }).then(response => {
                                if (!response.ok) {
                                    throw new Error(`Network is not ok {response}`);
                                }
                                return response.json();
                            }).then(data => {
                                console.log('Payment processed:', data);
                            }).catch(error => {
                                console.error('Error processing payment:', error);
                            });
                        }).catch(function(error) {
                            console.error(error);
                        });
                }
    </script>

    <partial name="_ValidationScriptsPartial"/>
}



